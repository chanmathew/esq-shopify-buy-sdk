{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/app.js","webpack:///./src/js/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","client","clientSettings","upsellSettings","initCount","itemCount","slickInitCount","checkoutUpsellDisplayCount","lsCheckoutId","lsCartId","cartOpen","modalOpen","checkoutUpsellModalOpen","$","fn","plugin","async","options","self","this","extend","domain","storefrontAccessToken","productHandle","defaultOption","defaultCurrency","defaultRegion","createClient","ShopifyBuy","buildClient","createContainer","hide","data","append","singleVariant","createPrices","createProduct","productOptions","colorOptions","createOptions","createColors","optionsAndVariants","each","productOptionIndex","productOption","container","find","id","attr","firstVariant","variants","available","pricesContainer","filter","variant","optionsContainer","length","insertAfter","empty","index","swatchName","title","split","replace","toLowerCase","setDefaultOption","product","text","defaultOptionElement","availableVariants","reduce","acc","currentOption","push","some","includes","element","el","setDefaultColor","availableColors","blackBrown","dataset","black","others","setSelectedText","selectedUnit","selectedColor","substring","toUpperCase","createCart","createCartAndCheckoutId","existingCheckoutId","JSON","parse","localStorage","getItem","checkout","fetch","then","lineItems","extractLineItems","createCartItems","catch","error","console","log","persistToLocalStorage","attachListeners","option","on","e","target","event","stopPropagation","stopImmediatePropagation","toggleCart","toggleModal","toggleCheckoutUpsellModal","addItems","removeItems","css","siblings","val","oldValue","parseInt","qtySelector","variantId","closest","qty","updateItems","fetchProduct","setup","initPlugin","pluginUpsell","heading","headingColor","discountCode","discountType","discountAmount","upsellOnCheckout","cartUpsell","checkoutUpsells","upsellDisplayCount","fetchFromLocalStorage","firstImage","images","src","altText","descriptionHtml","galleryContainer","img","dropdown","modalContainer","productVariant","upsells","map","item","productContainer","priceContainer","recursiveArraySearch","selectedUpsell","addUpsellItem","trackFbEvent","addDiscountToCheckout","toggleClass","fadeToggle","slick","arrows","dots","valueJson","stringify","setItem","newLineItems","subtitle","setAddToCartLoading","boolean","not","show","setCheckoutLoading","formatPrices","formatToCurrency","variantPrices","presentmentPrices","results","price","currencyCode","compareAtPrice","formattedPrice","formattedComparePrice","priceFormatter","Intl","NumberFormat","style","currency","maximumSignificantDigits","amount","format","comparePrice","formattedPrices","numericPrices","variableValues","handle","comparePriceFormatted","discountPrice","discountPriceFormatted","getOptionValues","values","array","searchString","search","row","keys","indexOf","html","fetchByHandle","response","unitOptions","bundleOptions","optionName","itemsToAdd","quantity","currentCheckoutId","addLineItems","toggleElement","selectedVariantId","selectedOption","addDiscount","cartItems","image","totalCartQty","itemsToRemove","matchingVariant","removeLineItems","removeDiscount","itemsToUpdate","updateLineItems","webUrl","location","href","productVariantShopifyId","exec","atob","fbq","priceV2","content_type","content_ids","content_category","content_name","num_items","jQuery"],"mappings":"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","file":"app.bundle.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","if (module.hot) {\n  module.hot.accept()\n}\nimport './main.js'\n","/* @license v0.1.8 Author: Mathew Chan. Copyright ESQIDO LTD. All Rights Reserved. */\n\n// Define variables\nlet initCount = 0\nlet itemCount = 0\nlet slickInitCount = 0\nlet checkoutUpsellDisplayCount = 0\nlet lsCheckoutId = 'esq_eyeliner_checkout_id'\nlet lsCartId = 'esq_eyeliner_cart'\nlet lsCheckoutUpsellDisplayCount = 'esq_checkout_upsell_display_count'\nlet cartOpen = false\nlet modalOpen = false\nlet checkoutUpsellModalOpen = false\nlet client\nlet clientSettings\nlet upsellSettings\nlet upsellVariantId\n\n  // Begin Plugin\n;(function ($) {\n  $.fn.plugin = async function (options) {\n    const self = this\n    clientSettings = $.extend(\n      {\n        domain: 'esqido.com',\n        storefrontAccessToken: '05f86644045cc5fc6cc10718814e3f31',\n        productHandle: 'gel-liner-pencil',\n        defaultOption: '2-Pack',\n        defaultCurrency: 'USD',\n        defaultRegion: 'en-US',\n      },\n      options\n    )\n    const setup = async function () {\n      createClient()\n      await fetchProduct(self, clientSettings.productHandle)\n    }\n    const initPlugin = async function () {\n      createContainer()\n      createProduct()\n      setDefaultOption()\n      setDefaultColor()\n      setSelectedText()\n      createCart()\n      await createCartAndCheckoutId()\n      createCartItems()\n      attachListeners()\n      initCount++\n    }\n    const createClient = function () {\n      const { domain, storefrontAccessToken } = clientSettings\n      client = ShopifyBuy.buildClient({\n        domain,\n        storefrontAccessToken,\n      })\n    }\n    const createContainer = function () {\n      $('.productSpinner').hide()\n      // If the product has options (not a single variant which only has an option of \"Title\")\n      const productOptions = self.data('productOptions')\n      if (productOptions) {\n        self.append(`\n          <div class=\"productOptions\"></div>\n          <div class=\"addToCartWrapper\">\n            <div class=\"quantity\">\n              <button class=\"quantity-button quantity-down\">-</button>\n                <input class=\"qtySelector\" type=\"number\" value=\"1\" min=\"1\" />\n              <button class=\"quantity-button quantity-up\">+</button>\n            </div>\n            <button class=\"btn addToCart\">\n              <img class=\"spinner\" src=\"https://cdn.shopify.com/s/files/1/0250/1519/files/spinner.svg?v=1585762796\" alt=\"Loading Checkout\" />\n              <span class=\"addToCartText\">Add To Cart</span>\n            </button>\n          </div>\n        `)\n      } else {\n        const singleVariant = self.data('singleVariant')\n        createPrices(singleVariant, self)\n        self.append(`\n          <span class=\"addToCartWrapper\">\n            <div class=\"quantity\">\n              <button class=\"quantity-button quantity-down\">-</button>\n                <input class=\"qtySelector\" type=\"number\" value=\"1\" min=\"1\" />\n              <button class=\"quantity-button quantity-up\">+</button>\n            </div>\n            <button class=\"btn addToCart\">\n              <img class=\"spinner\" src=\"https://cdn.shopify.com/s/files/1/0250/1519/files/spinner.svg?v=1585762796\" alt=\"Loading Checkout\" />\n              <span class=\"addToCartText\">Add To Cart</span>\n            </button>\n          </div>\n        `)\n      }\n    }\n    // Only render product options if the product has options or colors\n    const createProduct = function () {\n      const productOptions = self.data('productOptions')\n      const colorOptions = self.data('colorOptions')\n      if (productOptions) {\n        createOptions()\n      }\n      if (colorOptions) {\n        createColors(clientSettings.defaultOption)\n      }\n    }\n    // Render unit options\n    const createOptions = function () {\n      const optionsAndVariants = self.data('optionsAndVariants')\n      if (optionsAndVariants) {\n        $.each(optionsAndVariants, function (\n          productOptionIndex,\n          productOption\n        ) {\n          const container = self.find('.productOptions')\n          const id = self.attr('id')\n          const firstVariant = productOption.variants[0]\n          // First create the label and input for each product option\n          $(container).append(`\n            <label class=\"unit-option-label ${\n              !firstVariant.available ? 'unavailable' : ''\n            }\">\n              <input class=\"unit-option\" type=\"radio\" name=\"unit-option-${id}\" value='${\n            firstVariant.id\n          }' data-value='${productOption.name}' ${\n            !firstVariant.available ? 'disabled' : ''\n          }/>\n              ${productOption.name}\n            </label>\n          `)\n          // Get the price of any variant within that product option\n          const pricesContainer = container.find('.unit-option-label')[\n            productOptionIndex\n          ]\n          createPrices(firstVariant, pricesContainer, clientSettings)\n        })\n      }\n    }\n    const createColors = function (productOption) {\n      const optionsAndVariants = self.data('optionsAndVariants')\n      const colorOptions = self.data('colorOptions')\n      // Only render color swatches if it has color variants\n      if (colorOptions && productOption) {\n        // Find the variants for the matching option\n        const variants = optionsAndVariants.filter(\n          (variant) => variant.name === productOption\n        )[0]?.variants\n        // Append new container for productVariants\n        const optionsContainer = self.find('.productOptions')\n        const variantContainer = self.find('.productVariants')\n        if (!variantContainer.length) {\n          $(`\n            <div class=\"productVariants\"></div>\n            <p class=\"currentSelectedVariant\">\n              Selected: <span>Please choose an option</span>\n            </p>\n          `).insertAfter(optionsContainer)\n        }\n        let id = self.attr('id')\n        const container = self.find('.productVariants')\n        $(container).empty()\n        // Render color swatches\n        $.each(variants, function (index, variant) {\n          let swatchName = variant.title\n            .split(' / ')[1]\n            .replace(', ', '-')\n            .toLowerCase()\n          $(container).append(`\n          <label class=\"variant-option-label ${\n            !variant.available ? 'unavailable' : ''\n          }\" data-value=${swatchName}>\n              <input class=\"variant-option\" type=\"radio\" name=\"color-option-${id}\" data-value=${swatchName} value=${variant.id} ${!variant.available ? 'disabled' : ''}>\n          </label>\n        `)\n        })\n      }\n    }\n    const setDefaultOption = function () {\n      const singleVariant = self.data('singleVariant')\n      const product = self.data('product')\n      // Check if it's a single variant product, if it's sold out, disable the ATC button\n      if (singleVariant && !product.available) {\n        self.find('.addToCart').text('Sold Out').attr('disabled', true)\n      }\n      // Check if the product has options\n      const optionsAndVariants = self.data('optionsAndVariants')\n      if (optionsAndVariants) {\n        // Find the unit option that matches the defaultOption defined in settings\n        const defaultOptionElement = self.find(\n          `.unit-option[data-value='${clientSettings.defaultOption}']`\n        )\n        // Find all available variants\n        const availableVariants = optionsAndVariants.reduce(\n          (acc, currentOption) => {\n            // If the current variant is available\n            let variants = currentOption.variants.filter((variant) => {\n              return variant.available\n            })\n            if (variants.length) {\n              acc.push(...variants)\n            }\n            return acc\n          },\n          []\n        )\n        if (!availableVariants.length) {\n          self.find('.addToCart').text('Sold Out').attr('disabled', true)\n        }\n        // Find matching variantId in availableVariants array\n        const matchFound = availableVariants.some((variant) =>\n          variant.title.includes(clientSettings.defaultOption)\n        )\n        // If found, select the defaultOptionElement\n        if (matchFound) {\n          $(defaultOptionElement).attr('checked', true)\n        } else {\n          // Else, select another option element\n          const element = self.find('.unit-option')\n          $.each(element, function (i, el) {\n            if ($(el).data('value') !== clientSettings.defaultOption) {\n              $(el).attr('checked', true)\n            }\n          })\n        }\n      }\n    }\n    const setDefaultColor = function () {\n      // Check if there are colors that are available (in stock)\n      const availableColors = self.find('.variant-option:enabled')\n      if (availableColors.length) {\n        const blackBrown = availableColors.filter(\n          (i, el) => el.dataset.value === 'black-brown'\n        )\n        const black = availableColors.filter(\n          (i, el) => el.dataset.value === 'black'\n        )\n        const others = availableColors.filter((i, el) => {\n          return (\n            el.dataset.value !== 'black-brown' || el.dataset.value !== 'black'\n          )\n        })\n        if (blackBrown.length) {\n          return $(blackBrown[0]).attr('checked', true)\n        } else if (black.length) {\n          return $(black[0]).attr('checked', true)\n        } else {\n          return $(others[0]).attr('checked', true)\n        }\n      }\n    }\n    const handleQuantity = function () {\n      // Change background color of quantity buttons on click\n      $('body').on('mousedown', '.quantity-button', function (e) {\n        $(e.target).css('background-color', '#eee')\n      })\n      $('body').on('mouseup', '.quantity-button', function (e) {\n        $(e.target).css('background-color', '#fff')\n      })\n      // Increment or decrement the target quantity\n      self.on('click', '.quantity-down', function (e) {\n        let qtySelector = $(this).siblings('.qtySelector')\n        qtySelector.val(function (i, oldValue) {\n          if (oldValue > 1) {\n            return parseInt(oldValue, 10) - 1\n          } else {\n            return parseInt(oldValue, 10)\n          }\n        })\n      })\n      self.on('click', '.quantity-up', function () {\n        let qtySelector = $(this).siblings('.qtySelector')\n        qtySelector.val(function (i, oldValue) {\n          return parseInt(oldValue, 10) + 1\n        })\n      })\n    }\n    const handleCartQuantity = function () {\n      // Cart only needs event listeners once\n      if (initCount === 0) {\n        // Target cart quantity selectors\n        $('#cartLineItems').on('click', '.quantity-down', function (e) {\n          let qtySelector = $(this).siblings('.qtySelector')\n          qtySelector.val(function (i, oldValue) {\n            if (oldValue >= 1) {\n              return parseInt(oldValue, 10) - 1\n            } else {\n              return parseInt(oldValue, 10)\n            }\n          })\n          const variantId = $(this).closest('.cart-item').data().value\n          const qty = parseInt(qtySelector.val(), 10)\n          updateItems(variantId, qty)\n        })\n        $('#cartLineItems').on('click', '.quantity-up', function () {\n          let qtySelector = $(this).siblings('.qtySelector')\n          qtySelector.val(function (i, oldValue) {\n            return parseInt(oldValue, 10) + 1\n          })\n          const variantId = $(this).closest('.cart-item').data().value\n          const qty = parseInt(qtySelector.val(), 10)\n          updateItems(variantId, qty)\n        })\n      }\n    }\n    const setSelectedText = function () {\n      const colorOptions = self.data('colorOptions')\n      if (colorOptions?.length) {\n        const selectedUnit = self.find('.unit-option:checked').data('value')\n        let selectedColor = self.find('.variant-option:checked').data('value')\n        if (selectedColor === 'black-brown') {\n          selectedColor = '1 x Black, 1 x Brown'\n        } else {\n          selectedColor =\n            selectedColor.substring(0, 1).toUpperCase() +\n            selectedColor.substring(1, selectedColor.length)\n        }\n        self\n          .find('.currentSelectedVariant span')\n          .text(`${selectedUnit} - ${selectedColor}`)\n      }\n    }\n    /*\n      Cart Functions\n    */\n    const createCart = function () {\n      if (initCount === 0) {\n        $('#cartWrapper').empty().append(`\n          <div id=\"cartHeader\">\n            <h3>Your Bag</h3>\n            <button id=\"closeCart\">\n              <img src=\"https://uploads-ssl.webflow.com/5e70f8e5d7461820999a0cf5/5e7b70d9dd8fc24bf01bc3be_close.svg\" alt=\"Close Bag\" />\n            </button>\n          </div>\n          <div id=\"cartLineItems\">\n          </div>\n          <div id=\"cartEmpty\">\n              <p>Your bag's empty 🛍. Go shopping!</p>\n          </div>\n          <button id=\"checkoutButton\" class=\"btn\">\n            <img class=\"spinner\" src=\"https://cdn.shopify.com/s/files/1/0250/1519/files/spinner.svg?v=1585762796\" alt=\"Loading Checkout\" />\n            <span id=\"checkoutButtonText\">Checkout</span>\n          </button>\n        `)\n      }\n    }\n    const createCartAndCheckoutId = async function () {\n      if (initCount === 0) {\n        /* \n        IMPORANT: \n        Only 1 checkout is created for every instance on the same page / URL.\n        This ensures we can run multiple instances of this Jquery plugin to render multiple products on the same page with a unified cart\n      */\n        // Check if checkout exists in localstorage\n        const existingCheckoutId = JSON.parse(\n          localStorage.getItem(lsCheckoutId)\n        )\n        // If checkout exists, fetch checkout by checkoutId\n        if (existingCheckoutId) {\n          await client.checkout\n            .fetch(existingCheckoutId)\n            .then(function (checkout) {\n              if (checkout?.lineItems?.length) {\n                extractLineItems(checkout.lineItems)\n              }\n              createCartItems()\n            })\n            .catch((error) => {\n              console.log(\"Couldn't fetch checkout: \", error)\n            })\n        } else {\n          await client.checkout\n            .create()\n            .then(function (checkout) {\n              // Save new checkout ID to localstorage\n              if (checkout && checkout.id) {\n                persistToLocalStorage(lsCheckoutId, checkout.id)\n              }\n            })\n            .catch((error) =>\n              console.log(\"Couldn't create new checkout: \", error)\n            )\n        }\n      }\n    }\n    /*\n      Event Listeners \n    */\n    const attachListeners = function () {\n      const option = self.find('.unit-option')\n      $(option).on('click', function (e) {\n        createColors(e.target.dataset.value)\n        setDefaultColor()\n      })\n      // Do not attach listeners more than once\n      if (initCount === 0) {\n        // Render colors when unit options are changed\n        // Toggle cart drawer\n        $('body').on(\n          'click',\n          '#overlay, #openCart, .addToCart, #closeCart',\n          function (e) {\n            event.stopPropagation()\n            event.stopImmediatePropagation()\n            toggleCart()\n          }\n        )\n        $('body').on('click', '#modalOverlay', function (e) {\n          event.stopPropagation()\n          event.stopImmediatePropagation()\n          if (modalOpen) {\n            toggleModal()\n          } else if (checkoutUpsellModalOpen) {\n            toggleCheckoutUpsellModal()\n          }\n        })\n      }\n      // Add to cart handler\n      self.find('.addToCart').on('click', function (e) {\n        addItems(self, 'cart')\n      })\n      // Handle removing line items in cart\n      $('body').on('click', '.cart-item-remove', function (e) {\n        removeItems(e.target.dataset.value)\n      })\n      // Checkout handler\n      $('body').on('click', '#checkoutButton', async function (e) {\n        await checkout()\n      })\n      // Set selected text for Liner\n      self.on('click', '.unit-option, .variant-option', function (e) {\n        setSelectedText()\n      })\n      // Handle quantity inputs and buttons\n      handleQuantity()\n      handleCartQuantity()\n    }\n    // Call API and fetch product\n    await setup()\n    // Only render plugin if product exists\n    const product = self.data('product')\n    if (product) {\n      await initPlugin()\n    }\n  }\n  $.fn.pluginUpsell = async function (options) {\n    const self = this\n    upsellSettings = $.extend(\n      {\n        heading: 'You might also like',\n        headingColor: '#555555',\n        discountCode: null,\n        discountType: null,\n        discountAmount: null,\n        upsellOnCheckout: true,\n        cartUpsell: null,\n        checkoutUpsells: [\n          'unisyn-classic-bundle',\n          'unisyn-wispy-bundle',\n          'unisyn-glam-bundle',\n        ],\n      },\n      options\n    )\n    if (!client) {\n      console.log('Please initialize Client first.')\n    } else {\n      // Define the LS key for checkout upsell count\n      const upsellDisplayCount = fetchFromLocalStorage(\n        lsCheckoutUpsellDisplayCount\n      )\n      if (upsellSettings.upsellOnCheckout) {\n        if (upsellDisplayCount) {\n          checkoutUpsellDisplayCount = upsellDisplayCount\n        } else {\n          persistToLocalStorage(lsCheckoutUpsellDisplayCount, 0)\n        }\n      }\n      if (upsellSettings.cartUpsell) {\n        await fetchProduct(self, upsellSettings.cartUpsell)\n        const product = self.data('product')\n        if (product) {\n          const optionsAndVariants = self.data('optionsAndVariants')\n          const firstImage = product.images[0]\n          if (initCount === 0) {\n            $(self).append(`\n              <h3 class=\"cartUpsellTitle\" style=\"color: ${upsellSettings.headingColor}\">${upsellSettings.heading}</h3>\n            `)\n          }\n          $('#cartUpsells').append(`\n            <div class=\"upsellItem\">\n              <img class=\"upsellItemImage\" src=\"${firstImage.src}\" alt=\"${\n            firstImage.altText\n          }\">\n              <div class=\"upsellItemDetails\">\n                <a class=\"upsellItemTitle\">${product.title}</a>\n                ${\n                  optionsAndVariants\n                    ? `<select class=\"upsellProductOption\"></select>`\n                    : ''\n                }\n                <p class=\"upsellItemPrices\"></p>\n              </div>\n              <button class=\"btn upsellAddToCart\">\n                <img class=\"spinner\" src=\"https://cdn.shopify.com/s/files/1/0250/1519/files/spinner.svg?v=1585762796\" alt=\"Loading Checkout\" />\n                <span class=\"addToCartText\">Add</span>\n              </button>\n            </div>\n          `)\n          $('body').append(`\n            <div id=\"modalOverlay\"></div>\n            <div id=\"upsellItemModal\" class=\"upsellModal\">\n              <div id=\"upsellModalContainer\">\n                <div class=\"upsellItemGalleryContainer\">\n                  <div class=\"upsellItemGallery\"></div>\n                </div>\n                <div class=\"upsellItemDetails\">\n                  <a class=\"upsellItemTitle\">${product.title}</a>\n                  ${\n                    optionsAndVariants\n                      ? `<select class=\"upsellProductOption\"></select>`\n                      : ''\n                  }\n                  <p class=\"upsellItemPrices\"></p>\n                  <div class=\"upsellItemDescription\">${\n                    product.descriptionHtml\n                  }</div>\n                  <button class=\"btn upsellAddToCart\">\n                    <img class=\"spinner\" src=\"https://cdn.shopify.com/s/files/1/0250/1519/files/spinner.svg?v=1585762796\" alt=\"Loading Checkout\" />\n                    <span class=\"addToCartText\">Add To Cart</span>\n                  </button>\n                </div>\n                <button id=\"closeModal\">\n                  <img src=\"https://uploads-ssl.webflow.com/5e70f8e5d7461820999a0cf5/5e7b70d9dd8fc24bf01bc3be_close.svg\" alt=\"Close\" />\n                </button>\n              </div>\n            </div>\n          `)\n          const galleryContainer = $('#upsellItemModal').find(\n            '.upsellItemGallery'\n          )\n          $.each(product.images, function (i, img) {\n            $(galleryContainer).append(`\n            <img class=\"upsellItemImage\" src=\"${img.src}\" alt=\"${img.altText}\">\n            `)\n          })\n          if (optionsAndVariants) {\n            $.each(optionsAndVariants, function (\n              productOptionIndex,\n              productOption\n            ) {\n              const dropdown = $('body').find('.upsellProductOption')\n\n              const container = self.find('.upsellItem')\n              const id = self.attr('id')\n              const firstVariant = productOption.variants[0]\n              // First create the label and input for each product option\n              $(dropdown).append(`\n                <option class=\"unit-option\" value='${\n                  firstVariant.id\n                }' data-value='${productOption.name}' ${\n                !firstVariant.available ? 'disabled' : ''\n              }>\n                  ${productOption.name}\n                </option>\n              `)\n              // Get the price of any variant within that product option\n              const pricesContainer = container.find('.upsellItemPrices')[\n                productOptionIndex\n              ]\n              const modalContainer = $('#upsellItemModal').find(\n                '.upsellItemPrices'\n              )[productOptionIndex]\n              createPrices(firstVariant, pricesContainer)\n              createPrices(firstVariant, modalContainer)\n            })\n          } else {\n            const productVariant = product.variants[0]\n            const pricesContainer = self.find('.upsellItemPrices')\n            const modalContainer = $('#upsellItemModal').find(\n              '.upsellItemPrices'\n            )\n            createPrices(productVariant, pricesContainer)\n            createPrices(productVariant, modalContainer)\n          }\n        }\n      }\n      if (upsellSettings.upsellOnCheckout) {\n        const upsells = upsellSettings?.checkoutUpsells\n        $('body').append(`\n            <div id=\"modalOverlay\"></div>\n            <div id=\"checkoutUpsellModal\" class=\"upsellModal\">\n              <div id=\"checkoutUpsellModalContainer\">\n                <p class=\"checkoutSpsellModalSubhead\">Customize Your Order</p>\n                <h3>Add an Esqido Premium Lashes Kit at -40% OFF!</h3>\n                <div class=\"upsellHighlights\">\n                  <div class=\"upsellHighlightItem\">\n                    <img src=\"https://cdn.shopify.com/s/files/1/0250/1519/t/27/assets/time-icon.svg?v=1269636006768805444\" alt=\"\">\n                    <p>Highests Quality Materials That Lasts Up to 20-25 Wears</p>\n                  </div>\n                  <div class=\"upsellHighlightItem\">\n                    <img src=\"https://cdn.shopify.com/s/files/1/0250/1519/t/27/assets/eyelash-icon.svg?v=17637281597508357764\" alt=\"\">\n                    <p>Unisyn™ Technology Makes Them Ultra-natural Looking</p>\n                  </div>\n                  <div class=\"upsellHighlightItem\">\n                    <img src=\"https://cdn.shopify.com/s/files/1/0250/1519/t/27/assets/curler-icon.svg?v=18141781665275607000\" alt=\"\">\n                    <p>Recommended by A-list Celebs and Pro Make Up Artists</p>\n                  </div>\n                </div>\n                <div class=\"upsellItemListing\"></div>\n                <button id=\"skipCheckoutUpsell\" class=\"btn secondary\">No thanks, take me to checkout</button>\n                <button id=\"closeModal\">\n                  <img src=\"https://uploads-ssl.webflow.com/5e70f8e5d7461820999a0cf5/5e7b70d9dd8fc24bf01bc3be_close.svg\" alt=\"Close\" />\n                </button>\n              </div>\n            </div>\n          `)\n        if (upsells.length) {\n          const container = $('#checkoutUpsellModal').find('.upsellItemListing')\n          await upsells.map(async (item, i) => {\n            container.append(`\n                <div class=\"checkoutUpsellProduct product-${i}\">\n                </div>\n              `)\n            const productContainer = container.find(`.product-${i}`)\n            await fetchProduct(productContainer, item)\n            const product = productContainer.data('product')\n            productContainer.append(`\n                <div class=\"checkoutUpsellItemGalleryContainer\">\n                  <div class=\"checkoutUpsellItemGallery\"></div>\n                </div>\n                <p class=\"upsellItemTitle\">${product.title}</p>\n                <p class=\"upsellItemPrices\"></p>\n                <div class=\"upsellItemDescription\">${product.descriptionHtml}</div>\n                <button class=\"btn upsellAddToCart\" value=\"${product.variants[0].id}\">\n                  <img class=\"spinner\" src=\"https://cdn.shopify.com/s/files/1/0250/1519/files/spinner.svg?v=1585762796\" alt=\"Loading Checkout\" />\n                  <span class=\"addToCartText\">Add & Checkout</span>\n                </button>\n              `)\n            const priceContainer = productContainer.find('.upsellItemPrices')\n            const galleryContainer = productContainer.find(\n              '.checkoutUpsellItemGallery'\n            )\n            $.each(product.images, function (i, img) {\n              $(galleryContainer).append(`\n                <img class=\"checkoutUpsellImage\" src=\"${img.src}\" alt=\"${img.altText}\">\n              `)\n            })\n            product.variants.map((variant) =>\n              createPrices(variant, priceContainer)\n            )\n          })\n        }\n      }\n      /*\n          Upsell Event Listeners \n        */\n      // Check when the variant option changes for the upsell in cart\n      $('#cart').on('change', '.upsellProductOption', function (e) {\n        const variant = recursiveArraySearch(\n          product.variants,\n          e.target.value\n        )[0]\n        const container = self.find('.upsellItemPrices').empty()\n        createPrices(variant, container)\n      })\n      // Check when the variant option changes for the upsell in modal\n      $('#upsellItemModal').on('change', '.upsellProductOption', function (e) {\n        const variant = recursiveArraySearch(\n          product.variants,\n          e.target.value\n        )[0]\n        const container = $('#upsellItemModal')\n          .find('.upsellItemPrices')\n          .empty()\n        if (upsellSettings?.discountCode) {\n          createPrices(variant, container)\n        } else {\n          createPrices(variant, container)\n        }\n      })\n      self.find('.upsellAddToCart').on('click', function (e) {\n        const selectedUpsell = self.find('.unit-option:selected')\n        const productVariant = self.data('optionsAndVariants')\n          ? selectedUpsell.val()\n          : self.data('product').variants[0].id\n        addUpsellItem(productVariant)\n        // Add event to FB\n        trackFbEvent(self, productVariant)\n        if (upsellSettings?.discountCode) {\n          addDiscountToCheckout(upsellSettings.discountCode)\n        }\n      })\n      // Listen for the selected upsell in the modal separately because it has its own dropdown\n      $('#upsellItemModal').on('click', '.upsellAddToCart', function (e) {\n        const selectedUpsell = $('#upsellItemModal').find(\n          '.unit-option:selected'\n        )\n        // If the product has variants, get the ID of the selected variant, otherwise just pass the first variant ID\n        const productVariant = self.data('optionsAndVariants')\n          ? selectedUpsell.val()\n          : self.data('product').variants[0].id\n        addUpsellItem(productVariant)\n        // Add event to FB\n        trackFbEvent(self, productVariant)\n        if (upsellSettings?.discountCode) {\n          addDiscountToCheckout(upsellSettings.discountCode)\n        }\n      })\n      $('body').on('click', '.upsellItemTitle, #closeModal', function (e) {\n        if (cartOpen) {\n          toggleCart()\n        } else if (modalOpen) {\n          toggleModal()\n        } else if (checkoutUpsellModalOpen) {\n          toggleCheckoutUpsellModal()\n        }\n      })\n      // Checkout Upsell event listeners\n      $('#checkoutUpsellModal').on('click', '.upsellAddToCart', async function (\n        e\n      ) {\n        await addUpsellItem(this.value)\n        await checkout()\n      })\n      $('#skipCheckoutUpsell').on('click', async function (e) {\n        await checkout()\n      })\n    }\n  }\n  /*\n      Helper Functions\n    */\n  const toggleModal = function () {\n    modalOpen = !modalOpen\n    $('body').toggleClass('modalOpen')\n    $('#upsellItemModal').fadeToggle()\n    if (modalOpen && slickInitCount === 0) {\n      $('.upsellItemGallery').slick({\n        arrows: true,\n        dots: true,\n      })\n      slickInitCount++\n    }\n  }\n  const toggleCheckoutUpsellModal = function () {\n    checkoutUpsellModalOpen = !checkoutUpsellModalOpen\n    $('body').toggleClass('modalOpen')\n    $('#checkoutUpsellModal').fadeToggle()\n    if (checkoutUpsellModalOpen && slickInitCount === 0) {\n      $('.checkoutUpsellItemGallery').slick({\n        arrows: true,\n        dots: true,\n      })\n      slickInitCount++\n    }\n  }\n  const persistToLocalStorage = function (key, value) {\n    let valueJson = JSON.stringify(value)\n    localStorage.setItem(key, valueJson)\n  }\n  const fetchFromLocalStorage = function (key) {\n    return JSON.parse(localStorage.getItem(key))\n  }\n  const extractLineItems = function (lineItems) {\n    if (lineItems?.length) {\n      const newLineItems = lineItems.map((item) => {\n        return {\n          title: item.title,\n          subtitle: item.variant.title,\n          ...item,\n        }\n      })\n      persistToLocalStorage(lsCartId, newLineItems)\n    } else {\n      persistToLocalStorage(lsCartId, [])\n    }\n  }\n  const setAddToCartLoading = function (boolean) {\n    const element = $('.addToCart').not(':contains(\"Sold Out\")')\n    if (element) {\n      if (boolean) {\n        element.attr('disabled', true)\n        element.find('.addToCartText').hide()\n        element.find('.spinner').show()\n      } else {\n        element.attr('disabled', false)\n        element.find('.spinner').hide()\n        element.find('.addToCartText').show()\n      }\n    }\n  }\n  const setCheckoutLoading = function (boolean) {\n    if (boolean) {\n      $('#checkoutButton').attr('disabled', true)\n      $('#checkoutButtonText').hide()\n      $('#checkoutButton .spinner').show()\n    } else {\n      $('#checkoutButton').attr('disabled', false)\n      $('#checkoutButton .spinner').hide()\n      $('#checkoutButtonText').show()\n    }\n  }\n  const toggleCart = function () {\n    cartOpen = !cartOpen\n    $('body').toggleClass('cartOpen')\n  }\n  const formatPrices = function (variant, formatToCurrency = true) {\n    let variantPrices = null\n    if (variant && variant?.presentmentPrices?.length) {\n      const results = variant.presentmentPrices.filter(\n        (item) => item.price.currencyCode === clientSettings.defaultCurrency\n      )\n      if (results?.length) {\n        variantPrices = results[0]\n      }\n    }\n    if (variantPrices) {\n      const { price, compareAtPrice } = variantPrices\n      let formattedPrice\n      let formattedComparePrice\n      // Formats prices currency format, supports multi-currency\n      const priceFormatter = new Intl.NumberFormat(\n        clientSettings.defaultRegion,\n        {\n          style: 'currency',\n          currency: clientSettings.defaultCurrency,\n          maximumSignificantDigits: 4, // Trim any zeros after decimal\n        }\n      )\n      if (formatToCurrency) {\n        if (price?.amount) {\n          formattedPrice = priceFormatter.format(price.amount)\n        }\n        if (compareAtPrice?.amount) {\n          formattedComparePrice = priceFormatter.format(compareAtPrice.amount)\n        }\n        return {\n          price: formattedPrice,\n          comparePrice: formattedComparePrice\n            ? formattedComparePrice\n            : formattedPrice,\n        }\n      } else {\n        return {\n          price: price?.amount,\n          comparePrice: compareAtPrice?.amount,\n        }\n      }\n    }\n  }\n  // Render product variant pricing\n  const createPrices = function (variant, container) {\n    if (variant && container) {\n      // If it's a single variant product\n      const singleVariant = variant.length === 1\n      const formattedPrices = formatPrices(variant)\n      const numericPrices = formatPrices(variant, false)\n      const discountType = upsellSettings?.discountType\n      const discountAmount = upsellSettings?.discountAmount\n      let productHandle\n      if (variant?.variableValues) {\n        productHandle = variant.variableValues.handle\n      } else if (variant?.product) {\n        productHandle = variant.product.handle\n      }\n      const priceFormatter = new Intl.NumberFormat(\n        clientSettings.defaultRegion,\n        {\n          style: 'currency',\n          currency: clientSettings.defaultCurrency,\n          maximumSignificantDigits: 4, // Trim any zeros after decimal\n        }\n      )\n      const isUpsellItem = productHandle === upsellSettings.cartUpsell\n      if (isUpsellItem && discountType) {\n        const { price, comparePrice } = numericPrices\n        const comparePriceFormatted = formattedPrices?.comparePrice\n        let discountPrice\n        if (discountType === 'percentage') {\n          if (comparePrice) {\n            discountPrice = comparePrice * (discountAmount / 100)\n          } else {\n            discountPrice = price * (discountAmount / 100)\n          }\n        } else if (discountType === 'fixed') {\n          if (comparePrice) {\n            discountPrice = comparePrice - discountAmount\n          } else {\n            discountPrice = price - discountAmount\n          }\n        }\n        const discountPriceFormatted = priceFormatter.format(discountPrice)\n        $(container).append(`\n            <p class=\"unit-price ${\n              singleVariant ? 'single-product-price' : ''\n            } ${discountPrice < price ? 'sale-price' : ''}\">${\n          discountPrice < price\n            ? \"<span class='unit-compare-price'>\" +\n              comparePriceFormatted +\n              '</span>'\n            : ''\n        }\n            ${discountPriceFormatted} ${\n          clientSettings.defaultCurrency === 'USD'\n            ? clientSettings.defaultCurrency\n            : ''\n        }\n            </p>\n          `)\n      } else {\n        const { price, comparePrice } = formattedPrices\n        if (formattedPrices) {\n          $(container).append(`\n          <p class=\"unit-price ${singleVariant ? 'single-product-price' : ''} ${\n            comparePrice > price ? 'sale-price' : ''\n          }\">${\n            comparePrice > price\n              ? \"<span class='unit-compare-price'>\" + comparePrice + '</span>'\n              : ''\n          }\n          ${price} ${\n            clientSettings.defaultCurrency === 'USD'\n              ? clientSettings.defaultCurrency\n              : ''\n          }\n          </p>\n        `)\n        }\n      }\n    }\n  }\n  const getOptionValues = function (product, name) {\n    if (product?.options) {\n      const productOptions = product.options.filter(\n        (option) => option.name.toLowerCase() === name\n      )\n      const values = productOptions[0]?.values.map((option) => option.value)\n      return values\n    }\n  }\n  const recursiveArraySearch = function (array, searchString) {\n    return array.filter(function search(row) {\n      return Object.keys(row).some((key) => {\n        if (typeof row[key] === 'string') {\n          return row[key].toLowerCase().indexOf(searchString.toLowerCase()) > -1\n        } else if (row[key] && typeof row[key] === 'object') {\n          return search(row[key])\n        }\n        return false\n      })\n    })\n  }\n  const fetchProduct = async function (container, productHandle) {\n    if (container && productHandle) {\n      const self = $(container)\n      // Render loading spinner\n      self.html(`\n      <div class=\"productSpinner\">\n        <img src=\"https://cdn.shopify.com/s/files/1/0250/1519/files/spinner.svg?v=1585762796\" alt=\"Loading Checkout\" />\n      </div>\n    `)\n      // Fetch product by product handle\n      await client.product\n        .fetchByHandle(productHandle)\n        .then((response) => {\n          const product = response\n          // Cache product data to memory\n          self.data('product', product)\n          // If product has unit and color options, save them to data\n          const unitOptions = getOptionValues(product, 'units')\n          const productOptions = product?.options\n            .filter((option) => option.name.toLowerCase() !== 'title')\n            .map((option) => option.name)\n          const colorOptions = getOptionValues(product, 'color')\n          const bundleOptions = getOptionValues(product, 'bundle')\n          const singleVariant = product?.variants?.length === 1\n          // Create a new array that contains the product variants grouped by unit options\n          let optionsAndVariants = []\n          if (unitOptions?.length) {\n            for (let index in unitOptions) {\n              let optionName = unitOptions[index]\n              let variants = recursiveArraySearch(product.variants, optionName)\n              optionsAndVariants.push({\n                name: optionName,\n                variants,\n              })\n            }\n          } else if (bundleOptions?.length) {\n            for (let index in bundleOptions) {\n              let optionName = bundleOptions[index]\n              let variants = recursiveArraySearch(product.variants, optionName)\n              optionsAndVariants.push({\n                name: optionName,\n                variants,\n              })\n            }\n          }\n          // Only cache them to data if the options exist\n          singleVariant && self.data('singleVariant', product?.variants[0])\n          productOptions?.length && self.data('productOptions', productOptions)\n          unitOptions?.length && self.data('unitOptions', unitOptions)\n          colorOptions?.length && self.data('colorOptions', colorOptions)\n          optionsAndVariants?.length &&\n            self.data('optionsAndVariants', optionsAndVariants)\n        })\n        .catch((error) => console.log(\"Couldn't fetch product: \", error))\n    }\n  }\n  const addUpsellItem = async function (variantId, qty = 1) {\n    // Reset the item count so it will rerender the cart from scratch\n    itemCount = 0\n    // Set loading states for buttons\n    setAddToCartLoading(true)\n    setCheckoutLoading(true)\n    const quantity = parseInt(qty, 10)\n    const itemsToAdd = [\n      {\n        variantId,\n        quantity,\n      },\n    ]\n    const currentCheckoutId = fetchFromLocalStorage(lsCheckoutId)\n    if (currentCheckoutId) {\n      await client.checkout\n        .addLineItems(currentCheckoutId, itemsToAdd)\n        .then(function (checkout) {\n          // Check to see if the item was added\n          if (checkout.lineItems.length) {\n            extractLineItems(checkout.lineItems)\n          }\n        })\n      // Set loading states for buttons to false\n      setAddToCartLoading(false)\n      setCheckoutLoading(false)\n      // Rerender cart\n      createCartItems()\n      if (modalOpen) {\n        toggleModal()\n      }\n      if (!cartOpen) {\n        toggleCart()\n      }\n    }\n  }\n  const addItems = async function (self, toggleElement) {\n    // Reset the item count so it will rerender the cart from scratch\n    itemCount = 0\n    // Set loading states for buttons\n    setAddToCartLoading(true)\n    setCheckoutLoading(true)\n    // Check if the cart has any items to add\n    const currentCheckoutId = fetchFromLocalStorage(lsCheckoutId)\n    let selectedVariantId\n    let selectedOption\n    // Check if the product is a single variant\n    const singleVariant = self.data('singleVariant')\n    if (singleVariant) {\n      selectedVariantId = singleVariant.id\n    } else {\n      // Get the current selected variant option and find the variant ID\n      selectedOption = self.find(\"input[type='radio']:checked\")\n      if (selectedOption?.length) {\n        selectedVariantId = selectedOption[selectedOption.length - 1]?.value\n      } else {\n        selectedVariantId = self.find('.upsellProductOption').val()\n      }\n    }\n    // Find the current specified quantity to add\n    const qty = parseInt(self.find('.qtySelector').val(), 10)\n    // Format the line items for passing into checkout api\n    const itemsToAdd = [\n      {\n        variantId: selectedVariantId,\n        quantity: qty ? qty : 1, // If there's no qtySelector set default to 1\n      },\n    ]\n    // Send event to FB\n    trackFbEvent(self, selectedVariantId)\n\n    if (currentCheckoutId) {\n      await client.checkout\n        .addLineItems(currentCheckoutId, itemsToAdd)\n        .then(function (checkout) {\n          // Check to see if the item was added\n          if (checkout.lineItems.length) {\n            extractLineItems(checkout.lineItems)\n          }\n        })\n        .catch((error) => console.log(\"Couldn't add item to checkout: \", error))\n      // Set loading states for buttons to false\n      setAddToCartLoading(false)\n      setCheckoutLoading(false)\n      // Rerender cart\n      createCartItems()\n      if (toggleElement === 'cart') {\n        toggleCart()\n      } else if (toggleElement === 'modal') {\n        toggleModal()\n        toggleCart()\n      }\n    }\n  }\n  const addDiscountToCheckout = async function (discountCode) {\n    const currentCheckoutId = fetchFromLocalStorage(lsCheckoutId)\n    if (discountCode) {\n      // Add a discount code to the checkout\n      await client.checkout\n        .addDiscount(currentCheckoutId, discountCode)\n        .then((checkout) => {})\n    }\n  }\n  const createCartItems = function () {\n    if (itemCount === 0) {\n      $('#cartLineItems').empty()\n    }\n    const cartItems = fetchFromLocalStorage(lsCartId)\n    // Render items in checkout in cart\n    if (cartItems?.length) {\n      $('#checkoutButton').show()\n      $('#cartEmpty').hide()\n      let priceCount = 0\n      // For each item in cartItems, render until they've all been rendered\n      for (itemCount; itemCount <= cartItems.length - 1; ) {\n        cartItems.map(function (item, i) {\n          const { variant } = item\n          const formattedPrices = formatPrices(variant)\n          const numericPrices = formatPrices(variant, false)\n          const { price } = numericPrices\n          const { comparePrice } = formattedPrices\n\n          $('#cartLineItems').append(`\n            <div class=\"cart-item\" data-value=\"${item.id}\">\n            ${\n              variant?.image?.src\n                ? `<img src=\"${variant.image.src}\" alt=\"${variant.image?.altText}\"/>`\n                : `<img src=\"https://uploads-ssl.webflow.com/5e70f8e5d7461820999a0cf5/5e83a3654bfbfa1aa178d629_placeholder.jpg\" alt=\"${item.title}\"/>`\n            }\n              <div class=\"cart-item-details\">\n                <p class=\"cart-item-title\">${item.title}</p>\n                ${\n                  // Don't show the variant title if it's a single variant product\n                  item.subtitle.toLowerCase().includes('default title')\n                    ? ''\n                    : `<p class='cart-item-subtitle'>${item.subtitle}</p>`\n                }\n                <p class=\"cart-item-price\" data-value=${variant.id}></p>\n                <div class=\"quantity\">\n                  <button class=\"quantity-button quantity-down\">-</button>\n                  <input class=\"qtySelector\" type=\"number\" min=\"0\" value=\"${\n                    item.quantity\n                  }\" data-value=\"${variant.id}\" />\n                  <button class=\"quantity-button quantity-up\">+</button>\n                </div>\n                <span class=\"cart-item-remove\" data-value=\"${\n                  item.id\n                }\">Remove</span>\n              </div>\n            </div>\n          `)\n          const priceContainer = $('#cartLineItems')\n            .find('.cart-item-price')\n            .val(variant.id)[i]\n          createPrices(variant, priceContainer)\n          // Increment the item count so we know we rendered all the items and won't fire on subsequent instances\n          itemCount++\n        })\n        const totalCartQty = cartItems.reduce((acc, item) => {\n          return acc + item.quantity\n        }, 0)\n        $('#cartCount').text(totalCartQty)\n      }\n    } else {\n      $('#cartEmpty').show()\n      $('#checkoutButton').hide()\n      $('#cartCount').text(0)\n    }\n  }\n  const removeItems = async function (variantId) {\n    // Reset the item count so it will rerender the cart from scratch\n    itemCount = 0\n    // Set loading states for buttons\n    setCheckoutLoading(true)\n    // Check if the cart has any items to add\n    const currentCheckoutId = fetchFromLocalStorage(lsCheckoutId)\n    const cartItems = fetchFromLocalStorage(lsCartId)\n    // Format the line items for passing into checkout api\n    const itemsToRemove = [variantId]\n    const matchingVariant = recursiveArraySearch(cartItems, variantId)[0]\n\n    await client.checkout\n      .removeLineItems(currentCheckoutId, itemsToRemove)\n      .then(function (checkout) {\n        extractLineItems(checkout.lineItems)\n      })\n      .catch((error) =>\n        console.log(\"Couldn't remove item from checkout: \", error)\n      )\n    if (matchingVariant && matchingVariant.id === variantId) {\n      await client.checkout\n        .removeDiscount(currentCheckoutId)\n        .then((checkout) => {})\n    }\n    // Set loading states for buttons to false\n    setCheckoutLoading(false)\n    // Rerender cart\n    createCartItems()\n  }\n  const updateItems = async function (variantId, qty) {\n    // Reset the item count so it will rerender the cart from scratch\n    itemCount = 0\n    // Set loading states for buttons\n    setAddToCartLoading(true)\n    setCheckoutLoading(true)\n    // Check if the cart has any items to add\n    const currentCheckoutId = fetchFromLocalStorage(lsCheckoutId)\n    // Get the current selected variant option and find the variant ID\n    // Format the line items for passing into checkout api\n    const itemsToUpdate = [\n      {\n        id: variantId,\n        quantity: qty,\n      },\n    ]\n    await client.checkout\n      .updateLineItems(currentCheckoutId, itemsToUpdate)\n      .then(function (checkout) {\n        extractLineItems(checkout.lineItems)\n      })\n      .catch((error) =>\n        console.log(\"Couldn't update items in checkout: \", error)\n      )\n    // Set loading states for buttons to false\n    setAddToCartLoading(false)\n    setCheckoutLoading(false)\n    // Rerender cart\n    createCartItems()\n  }\n  const checkout = async function () {\n    console.log('Checkout fired!')\n    const currentCheckoutId = fetchFromLocalStorage(lsCheckoutId)\n    const upsellDisplayCount = fetchFromLocalStorage(\n      lsCheckoutUpsellDisplayCount\n    )\n    // If the upsell hasn't been shown to the customer yet, trigger the modal\n    if (upsellSettings?.upsellOnCheckout && upsellDisplayCount === 0) {\n      console.log('Count:', upsellDisplayCount)\n      toggleCart()\n      toggleCheckoutUpsellModal()\n      checkoutUpsellDisplayCount++\n      persistToLocalStorage(\n        lsCheckoutUpsellDisplayCount,\n        checkoutUpsellDisplayCount\n      )\n      return\n    } else {\n      console.log('checking out')\n      // If the upsell has already been shown, skip the modal and go to checkout\n      setCheckoutLoading(true)\n      await client.checkout.fetch(currentCheckoutId).then((checkout) => {\n        // Do something with the checkout\n        if (checkout.webUrl) {\n          location.href = checkout.webUrl\n        }\n      })\n    }\n  }\n  const trackFbEvent = function (self, variantId) {\n    // Add Facebook Tracking\n    const productTitle = self.data('product')?.title\n    const productVariant = recursiveArraySearch(\n      self.data('product').variants,\n      variantId\n    )[0]\n    const pattern = /\\/([0-9]+)[^\\/]*$/\n    const productVariantShopifyId = pattern.exec(\n      atob(self.data('product')?.id)\n    )[1]\n    const qty = parseInt(self.find('.qtySelector').val(), 10)\n    if (typeof fbq !== 'undefined') {\n      fbq('track', 'AddToCart', {\n        value: parseInt(productVariant.priceV2.amount, 10),\n        currency: clientSettings.defaultCurrency,\n        content_type: 'product_group',\n        content_ids: productVariantShopifyId,\n        content_category: productVariant.title,\n        content_name: productVariant.title,\n        num_items: qty ? qty : 1,\n      })\n    }\n  }\n})(jQuery)\n"],"sourceRoot":""}