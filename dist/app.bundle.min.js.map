{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/app.js","webpack:///./src/js/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","client","clientSettings","upsellSettings","initCount","itemCount","slickInitCount","checkoutUpsellDisplayCount","lsCheckoutId","lsCartId","cartOpen","modalOpen","checkoutUpsellModalOpen","$","fn","plugin","options","self","this","extend","domain","storefrontAccessToken","productHandle","defaultOption","defaultCurrency","defaultRegion","setup","createClient","fetchProduct","initPlugin","createContainer","createProduct","setDefaultOption","setDefaultColor","setSelectedText","createCart","createCartAndCheckoutId","createCartItems","attachListeners","ShopifyBuy","buildClient","hide","data","append","singleVariant","createPrices","productOptions","colorOptions","createOptions","createColors","optionsAndVariants","each","productOptionIndex","productOption","container","find","id","attr","firstVariant","variants","available","pricesContainer","filter","variant","optionsContainer","length","insertAfter","empty","index","swatchName","title","split","replace","toLowerCase","product","text","defaultOptionElement","availableVariants","reduce","acc","currentOption","push","some","includes","element","el","availableColors","blackBrown","dataset","black","others","handleQuantity","on","e","target","css","siblings","val","oldValue","parseInt","handleCartQuantity","qtySelector","variantId","closest","qty","updateItems","selectedUnit","selectedColor","substring","toUpperCase","existingCheckoutId","JSON","parse","localStorage","getItem","checkout","fetch","then","lineItems","extractLineItems","catch","error","console","log","persistToLocalStorage","option","event","stopPropagation","stopImmediatePropagation","toggleCart","toggleModal","toggleCheckoutUpsellModal","addItems","removeItems","pluginUpsell","heading","headingColor","discountCode","discountType","discountAmount","upsellOnCheckout","cartUpsell","checkoutUpsells","upsellDisplayCount","fetchFromLocalStorage","firstImage","images","src","altText","descriptionHtml","galleryContainer","img","dropdown","modalContainer","productVariant","upsells","map","item","productContainer","priceContainer","recursiveArraySearch","selectedUpsell","addUpsellItem","trackFbEvent","addDiscountToCheckout","toggleClass","fadeToggle","slick","arrows","dots","valueJson","stringify","setItem","newLineItems","subtitle","setAddToCartLoading","boolean","not","show","setCheckoutLoading","formatPrices","formatToCurrency","variantPrices","presentmentPrices","results","price","currencyCode","formattedPrice","formattedComparePrice","compareAtPrice","priceFormatter","Intl","NumberFormat","style","currency","maximumSignificantDigits","amount","format","comparePrice","formattedPrices","numericPrices","variableValues","handle","discountPrice","comparePriceFormatted","discountPriceFormatted","getOptionValues","values","array","searchString","search","row","keys","indexOf","html","fetchByHandle","response","unitOptions","bundleOptions","optionName","quantity","itemsToAdd","currentCheckoutId","addLineItems","toggleElement","selectedVariantId","selectedOption","addDiscount","cartItems","image","totalCartQty","itemsToRemove","matchingVariant","removeLineItems","removeDiscount","itemsToUpdate","updateLineItems","webUrl","location","href","productVariantShopifyId","exec","atob","fbq","priceV2","content_type","content_ids","content_category","content_name","num_items","jQuery"],"mappings":"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","file":"app.bundle.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","if (module.hot) {\n  module.hot.accept()\n}\nimport './main.js'\n","/* @license v0.2.5 Author: Mathew Chan. Copyright ESQIDO LTD. All Rights Reserved. */\n\n// Define variables\nlet initCount = 0\nlet itemCount = 0\nlet slickInitCount = 0\nlet checkoutUpsellDisplayCount = 0\nlet lsCheckoutId = 'esq_eyeliner_checkout_id'\nlet lsCartId = 'esq_eyeliner_cart'\nlet lsCheckoutUpsellDisplayCount = 'esq_checkout_upsell_display_count'\nlet cartOpen = false\nlet modalOpen = false\nlet checkoutUpsellModalOpen = false\nlet client\nlet clientSettings\nlet upsellSettings\nlet upsellVariantId\n\n  // Begin Plugin\n;(function ($) {\n  $.fn.plugin = async function (options) {\n    const self = this\n    clientSettings = $.extend(\n      {\n        domain: 'esqido.com',\n        storefrontAccessToken: '05f86644045cc5fc6cc10718814e3f31',\n        productHandle: 'gel-liner-pencil',\n        defaultOption: '2-Pack',\n        defaultCurrency: 'USD',\n        defaultRegion: 'en-US',\n      },\n      options\n    )\n    const setup = async function () {\n      createClient()\n      await fetchProduct(self, clientSettings.productHandle)\n    }\n    const initPlugin = async function () {\n      createContainer()\n      createProduct()\n      setDefaultOption()\n      setDefaultColor()\n      setSelectedText()\n      createCart()\n      await createCartAndCheckoutId()\n      createCartItems()\n      attachListeners()\n      initCount++\n    }\n    const createClient = function () {\n      const { domain, storefrontAccessToken } = clientSettings\n      client = ShopifyBuy.buildClient({\n        domain,\n        storefrontAccessToken,\n      })\n    }\n    const createContainer = function () {\n      $('.productSpinner').hide()\n      // If the product has options (not a single variant which only has an option of \"Title\")\n      const productOptions = self.data('productOptions')\n      if (productOptions) {\n        self.append(`\n          <div class=\"productOptions\"></div>\n          <div class=\"addToCartWrapper\">\n            <div class=\"quantity\">\n              <button class=\"quantity-button quantity-down\">-</button>\n                <input class=\"qtySelector\" type=\"number\" value=\"1\" min=\"1\" />\n              <button class=\"quantity-button quantity-up\">+</button>\n            </div>\n            <button class=\"btn addToCart\">\n              <img class=\"spinner\" src=\"https://cdn.shopify.com/s/files/1/0250/1519/files/spinner.svg?v=1585762796\" alt=\"Loading Checkout\" />\n              <span class=\"addToCartText\">Add To Cart</span>\n            </button>\n          </div>\n        `)\n      } else {\n        const singleVariant = self.data('singleVariant')\n        createPrices(singleVariant, self)\n        self.append(`\n          <span class=\"addToCartWrapper\">\n            <div class=\"quantity\">\n              <button class=\"quantity-button quantity-down\">-</button>\n                <input class=\"qtySelector\" type=\"number\" value=\"1\" min=\"1\" />\n              <button class=\"quantity-button quantity-up\">+</button>\n            </div>\n            <button class=\"btn addToCart\">\n              <img class=\"spinner\" src=\"https://cdn.shopify.com/s/files/1/0250/1519/files/spinner.svg?v=1585762796\" alt=\"Loading Checkout\" />\n              <span class=\"addToCartText\">Add To Cart</span>\n            </button>\n          </div>\n        `)\n      }\n    }\n    // Only render product options if the product has options or colors\n    const createProduct = function () {\n      const productOptions = self.data('productOptions')\n      const colorOptions = self.data('colorOptions')\n      if (productOptions) {\n        createOptions()\n      }\n      if (colorOptions) {\n        createColors(clientSettings.defaultOption)\n      }\n    }\n    // Render unit options\n    const createOptions = function () {\n      const optionsAndVariants = self.data('optionsAndVariants')\n      if (optionsAndVariants) {\n        $.each(optionsAndVariants, function (\n          productOptionIndex,\n          productOption\n        ) {\n          const container = self.find('.productOptions')\n          const id = self.attr('id')\n          const firstVariant = productOption.variants[0]\n          // First create the label and input for each product option\n          $(container).append(`\n            <label class=\"unit-option-label ${\n              !firstVariant.available ? 'unavailable' : ''\n            }\">\n              <input class=\"unit-option\" type=\"radio\" name=\"unit-option-${id}\" value='${\n            firstVariant.id\n          }' data-value='${productOption.name}' ${\n            !firstVariant.available ? 'disabled' : ''\n          }/>\n              ${productOption.name}\n            </label>\n          `)\n          // Get the price of any variant within that product option\n          const pricesContainer = container.find('.unit-option-label')[\n            productOptionIndex\n          ]\n          createPrices(firstVariant, pricesContainer, clientSettings)\n        })\n      }\n    }\n    const createColors = function (productOption) {\n      const optionsAndVariants = self.data('optionsAndVariants')\n      const colorOptions = self.data('colorOptions')\n      // Only render color swatches if it has color variants\n      if (colorOptions && productOption) {\n        // Find the variants for the matching option\n        const variants = optionsAndVariants.filter(\n          (variant) => variant.name === productOption\n        )[0]?.variants\n        // Append new container for productVariants\n        const optionsContainer = self.find('.productOptions')\n        const variantContainer = self.find('.productVariants')\n        if (!variantContainer.length) {\n          $(`\n            <div class=\"productVariants\"></div>\n            <p class=\"currentSelectedVariant\">\n              Selected: <span>Please choose an option</span>\n            </p>\n          `).insertAfter(optionsContainer)\n        }\n        let id = self.attr('id')\n        const container = self.find('.productVariants')\n        $(container).empty()\n        // Render color swatches\n        $.each(variants, function (index, variant) {\n          let swatchName = variant.title\n            .split(' / ')[1]\n            .replace(', ', '-')\n            .toLowerCase()\n          $(container).append(`\n          <label class=\"variant-option-label ${\n            !variant.available ? 'unavailable' : ''\n          }\" data-value=${swatchName}>\n              <input class=\"variant-option\" type=\"radio\" name=\"color-option-${id}\" data-value=${swatchName} value=${variant.id} ${!variant.available ? 'disabled' : ''}>\n          </label>\n        `)\n        })\n      }\n    }\n    const setDefaultOption = function () {\n      const singleVariant = self.data('singleVariant')\n      const product = self.data('product')\n      // Check if it's a single variant product, if it's sold out, disable the ATC button\n      if (singleVariant && !product.available) {\n        self.find('.addToCart').text('Sold Out').attr('disabled', true)\n      }\n      // Check if the product has options\n      const optionsAndVariants = self.data('optionsAndVariants')\n      if (optionsAndVariants) {\n        // Find the unit option that matches the defaultOption defined in settings\n        const defaultOptionElement = self.find(\n          `.unit-option[data-value='${clientSettings.defaultOption}']`\n        )\n        // Find all available variants\n        const availableVariants = optionsAndVariants.reduce(\n          (acc, currentOption) => {\n            // If the current variant is available\n            let variants = currentOption.variants.filter((variant) => {\n              return variant.available\n            })\n            if (variants.length) {\n              acc.push(...variants)\n            }\n            return acc\n          },\n          []\n        )\n        if (!availableVariants.length) {\n          self.find('.addToCart').text('Sold Out').attr('disabled', true)\n        }\n        // Find matching variantId in availableVariants array\n        const matchFound = availableVariants.some((variant) =>\n          variant.title.includes(clientSettings.defaultOption)\n        )\n        // If found, select the defaultOptionElement\n        if (matchFound) {\n          $(defaultOptionElement).attr('checked', true)\n        } else {\n          // Else, select another option element\n          const element = self.find('.unit-option')\n          $.each(element, function (i, el) {\n            if ($(el).data('value') !== clientSettings.defaultOption) {\n              $(el).attr('checked', true)\n            }\n          })\n        }\n      }\n    }\n    const setDefaultColor = function () {\n      // Check if there are colors that are available (in stock)\n      const availableColors = self.find('.variant-option:enabled')\n      if (availableColors.length) {\n        const blackBrown = availableColors.filter(\n          (i, el) => el.dataset.value === 'black-brown'\n        )\n        const black = availableColors.filter(\n          (i, el) => el.dataset.value === 'black'\n        )\n        const others = availableColors.filter((i, el) => {\n          return (\n            el.dataset.value !== 'black-brown' || el.dataset.value !== 'black'\n          )\n        })\n        if (blackBrown.length) {\n          return $(blackBrown[0]).attr('checked', true)\n        } else if (black.length) {\n          return $(black[0]).attr('checked', true)\n        } else {\n          return $(others[0]).attr('checked', true)\n        }\n      }\n    }\n    const handleQuantity = function () {\n      // Change background color of quantity buttons on click\n      $('body').on('mousedown', '.quantity-button', function (e) {\n        $(e.target).css('background-color', '#eee')\n      })\n      $('body').on('mouseup', '.quantity-button', function (e) {\n        $(e.target).css('background-color', '#fff')\n      })\n      // Increment or decrement the target quantity\n      self.on('click', '.quantity-down', function (e) {\n        let qtySelector = $(this).siblings('.qtySelector')\n        qtySelector.val(function (i, oldValue) {\n          if (oldValue > 1) {\n            return parseInt(oldValue, 10) - 1\n          } else {\n            return parseInt(oldValue, 10)\n          }\n        })\n      })\n      self.on('click', '.quantity-up', function () {\n        let qtySelector = $(this).siblings('.qtySelector')\n        qtySelector.val(function (i, oldValue) {\n          return parseInt(oldValue, 10) + 1\n        })\n      })\n    }\n    const handleCartQuantity = function () {\n      // Cart only needs event listeners once\n      if (initCount === 0) {\n        // Target cart quantity selectors\n        $('#cartLineItems').on('click', '.quantity-down', function (e) {\n          let qtySelector = $(this).siblings('.qtySelector')\n          qtySelector.val(function (i, oldValue) {\n            if (oldValue >= 1) {\n              return parseInt(oldValue, 10) - 1\n            } else {\n              return parseInt(oldValue, 10)\n            }\n          })\n          const variantId = $(this).closest('.cart-item').data().value\n          const qty = parseInt(qtySelector.val(), 10)\n          updateItems(variantId, qty)\n        })\n        $('#cartLineItems').on('click', '.quantity-up', function () {\n          let qtySelector = $(this).siblings('.qtySelector')\n          qtySelector.val(function (i, oldValue) {\n            return parseInt(oldValue, 10) + 1\n          })\n          const variantId = $(this).closest('.cart-item').data().value\n          const qty = parseInt(qtySelector.val(), 10)\n          updateItems(variantId, qty)\n        })\n      }\n    }\n    const setSelectedText = function () {\n      const colorOptions = self.data('colorOptions')\n      if (colorOptions?.length) {\n        const selectedUnit = self.find('.unit-option:checked').data('value')\n        let selectedColor = self.find('.variant-option:checked').data('value')\n        if (selectedColor === 'black-brown') {\n          selectedColor = '1 x Black, 1 x Brown'\n        } else {\n          selectedColor =\n            selectedColor.substring(0, 1).toUpperCase() +\n            selectedColor.substring(1, selectedColor.length)\n        }\n        self\n          .find('.currentSelectedVariant span')\n          .text(`${selectedUnit} - ${selectedColor}`)\n      }\n    }\n    /*\n      Cart Functions\n    */\n    const createCart = function () {\n      if (initCount === 0) {\n        $('#cartWrapper').empty().append(`\n          <div id=\"cartHeader\">\n            <h3>Your Bag</h3>\n            <button id=\"closeCart\">\n              <img src=\"https://uploads-ssl.webflow.com/5e70f8e5d7461820999a0cf5/5e7b70d9dd8fc24bf01bc3be_close.svg\" alt=\"Close Bag\" />\n            </button>\n          </div>\n          <div id=\"cartLineItems\">\n          </div>\n          <div id=\"cartEmpty\">\n              <p>Your bag's empty 🛍. Go shopping!</p>\n          </div>\n          <button id=\"checkoutButton\" class=\"btn\">\n            <img class=\"spinner\" src=\"https://cdn.shopify.com/s/files/1/0250/1519/files/spinner.svg?v=1585762796\" alt=\"Loading Checkout\" />\n            <span id=\"checkoutButtonText\">Checkout</span>\n          </button>\n        `)\n      }\n    }\n    const createCartAndCheckoutId = async function () {\n      if (initCount === 0) {\n        /* \n        IMPORANT: \n        Only 1 checkout is created for every instance on the same page / URL.\n        This ensures we can run multiple instances of this Jquery plugin to render multiple products on the same page with a unified cart\n      */\n        // Check if checkout exists in localstorage\n        const existingCheckoutId = JSON.parse(\n          localStorage.getItem(lsCheckoutId)\n        )\n        // If checkout exists, fetch checkout by checkoutId\n        if (existingCheckoutId) {\n          await client.checkout\n            .fetch(existingCheckoutId)\n            .then(function (checkout) {\n              if (checkout?.lineItems?.length) {\n                extractLineItems(checkout.lineItems)\n              }\n              createCartItems()\n            })\n            .catch((error) => {\n              console.log(\"Couldn't fetch checkout: \", error)\n            })\n        } else {\n          await client.checkout\n            .create()\n            .then(function (checkout) {\n              // Save new checkout ID to localstorage\n              if (checkout && checkout.id) {\n                persistToLocalStorage(lsCheckoutId, checkout.id)\n              }\n            })\n            .catch((error) =>\n              console.log(\"Couldn't create new checkout: \", error)\n            )\n        }\n      }\n    }\n    /*\n      Event Listeners \n    */\n    const attachListeners = function () {\n      const option = self.find('.unit-option')\n      $(option).on('click', function (e) {\n        createColors(e.target.dataset.value)\n        setDefaultColor()\n      })\n      // Do not attach listeners more than once\n      if (initCount === 0) {\n        // Render colors when unit options are changed\n        // Toggle cart drawer\n        $('body').on(\n          'click',\n          '#overlay, #openCart, .addToCart, #closeCart',\n          function (e) {\n            event.stopPropagation()\n            event.stopImmediatePropagation()\n            toggleCart()\n          }\n        )\n        $('body').on('click', '#modalOverlay', function (e) {\n          event.stopPropagation()\n          event.stopImmediatePropagation()\n          if (modalOpen) {\n            toggleModal()\n          } else if (checkoutUpsellModalOpen) {\n            toggleCheckoutUpsellModal()\n          }\n        })\n      }\n      // Add to cart handler\n      self.find('.addToCart').on('click', function (e) {\n        addItems(self, 'cart')\n      })\n      // Handle removing line items in cart\n      $('body').on('click', '.cart-item-remove', function (e) {\n        removeItems(e.target.dataset.value)\n      })\n      // Checkout handler\n      $('body').on('click', '#checkoutButton', async function (e) {\n        e.stopPropagation()\n        e.stopImmediatePropagation()\n        await checkout()\n      })\n      // Set selected text for Liner\n      self.on('click', '.unit-option, .variant-option', function (e) {\n        setSelectedText()\n      })\n      // Handle quantity inputs and buttons\n      handleQuantity()\n      handleCartQuantity()\n    }\n    // Call API and fetch product\n    await setup()\n    // Only render plugin if product exists\n    const product = self.data('product')\n    if (product) {\n      await initPlugin()\n    }\n  }\n  $.fn.pluginUpsell = async function (options) {\n    const self = this\n    upsellSettings = $.extend(\n      {\n        heading: 'You might also like',\n        headingColor: '#555555',\n        discountCode: null,\n        discountType: null,\n        discountAmount: null,\n        upsellOnCheckout: true,\n        cartUpsell: null,\n        checkoutUpsells: [\n          'unisyn-classic-bundle',\n          'unisyn-wispy-bundle',\n          'unisyn-glam-bundle',\n        ],\n      },\n      options\n    )\n    if (!client) {\n      console.log('Please initialize Client first.')\n    } else {\n      // Define the LS key for checkout upsell count\n      const upsellDisplayCount = fetchFromLocalStorage(\n        lsCheckoutUpsellDisplayCount\n      )\n      if (upsellSettings.upsellOnCheckout) {\n        if (upsellDisplayCount) {\n          checkoutUpsellDisplayCount = upsellDisplayCount\n        } else {\n          persistToLocalStorage(lsCheckoutUpsellDisplayCount, 0)\n        }\n      }\n      if (upsellSettings.cartUpsell) {\n        await fetchProduct(self, upsellSettings.cartUpsell)\n        const product = self.data('product')\n        if (product) {\n          const optionsAndVariants = self.data('optionsAndVariants')\n          const firstImage = product.images[0]\n          if (initCount === 0) {\n            $(self).append(`\n              <h3 class=\"cartUpsellTitle\" style=\"color: ${upsellSettings.headingColor}\">${upsellSettings.heading}</h3>\n            `)\n          }\n          $('#cartUpsells').append(`\n            <div class=\"upsellItem\">\n              <img class=\"upsellItemImage\" src=\"${firstImage.src}\" alt=\"${\n            firstImage.altText\n          }\">\n              <div class=\"upsellItemDetails\">\n                <a class=\"upsellItemTitle\">${product.title}</a>\n                ${\n                  optionsAndVariants\n                    ? `<select class=\"upsellProductOption\"></select>`\n                    : ''\n                }\n                <p class=\"upsellItemPrices\"></p>\n              </div>\n              <button class=\"btn upsellAddToCart\">\n                <img class=\"spinner\" src=\"https://cdn.shopify.com/s/files/1/0250/1519/files/spinner.svg?v=1585762796\" alt=\"Loading Checkout\" />\n                <span class=\"addToCartText\">Add</span>\n              </button>\n            </div>\n          `)\n          $('body').append(`\n            <div id=\"modalOverlay\"></div>\n            <div id=\"upsellItemModal\" class=\"upsellModal\">\n              <div id=\"upsellModalContainer\">\n                <div class=\"upsellItemGalleryContainer\">\n                  <div class=\"upsellItemGallery\"></div>\n                </div>\n                <div class=\"upsellItemDetails\">\n                  <a class=\"upsellItemTitle\">${product.title}</a>\n                  ${\n                    optionsAndVariants\n                      ? `<select class=\"upsellProductOption\"></select>`\n                      : ''\n                  }\n                  <p class=\"upsellItemPrices\"></p>\n                  <div class=\"upsellItemDescription\">${\n                    product.descriptionHtml\n                  }</div>\n                  <button class=\"btn upsellAddToCart\">\n                    <img class=\"spinner\" src=\"https://cdn.shopify.com/s/files/1/0250/1519/files/spinner.svg?v=1585762796\" alt=\"Loading Checkout\" />\n                    <span class=\"addToCartText\">Add To Cart</span>\n                  </button>\n                </div>\n                <button id=\"closeModal\">\n                  <img src=\"https://uploads-ssl.webflow.com/5e70f8e5d7461820999a0cf5/5e7b70d9dd8fc24bf01bc3be_close.svg\" alt=\"Close\" />\n                </button>\n              </div>\n            </div>\n          `)\n          const galleryContainer = $('#upsellItemModal').find(\n            '.upsellItemGallery'\n          )\n          $.each(product.images, function (i, img) {\n            $(galleryContainer).append(`\n            <img class=\"upsellItemImage\" src=\"${img.src}\" alt=\"${img.altText}\">\n            `)\n          })\n          if (optionsAndVariants) {\n            $.each(optionsAndVariants, function (\n              productOptionIndex,\n              productOption\n            ) {\n              const dropdown = $('body').find('.upsellProductOption')\n\n              const container = self.find('.upsellItem')\n              const id = self.attr('id')\n              const firstVariant = productOption.variants[0]\n              // First create the label and input for each product option\n              $(dropdown).append(`\n                <option class=\"unit-option\" value='${\n                  firstVariant.id\n                }' data-value='${productOption.name}' ${\n                !firstVariant.available ? 'disabled' : ''\n              }>\n                  ${productOption.name}\n                </option>\n              `)\n              // Get the price of any variant within that product option\n              const pricesContainer = container.find('.upsellItemPrices')[\n                productOptionIndex\n              ]\n              const modalContainer = $('#upsellItemModal').find(\n                '.upsellItemPrices'\n              )[productOptionIndex]\n              createPrices(firstVariant, pricesContainer)\n              createPrices(firstVariant, modalContainer)\n            })\n          } else {\n            const productVariant = product.variants[0]\n            const pricesContainer = self.find('.upsellItemPrices')\n            const modalContainer = $('#upsellItemModal').find(\n              '.upsellItemPrices'\n            )\n            createPrices(productVariant, pricesContainer)\n            createPrices(productVariant, modalContainer)\n          }\n        }\n      }\n      if (upsellSettings.upsellOnCheckout) {\n        const upsells = upsellSettings?.checkoutUpsells\n        $('body').append(`\n            <div id=\"modalOverlay\"></div>\n            <div id=\"checkoutUpsellModal\" class=\"upsellModal\">\n              <div id=\"checkoutUpsellModalContainer\">\n                <p class=\"checkoutSpsellModalSubhead\">Customize Your Order</p>\n                <h3>Add an Esqido Premium Lashes Kit at -40% OFF!</h3>\n                <div class=\"upsellHighlights\">\n                  <div class=\"upsellHighlightItem\">\n                    <img src=\"https://cdn.shopify.com/s/files/1/0250/1519/t/27/assets/time-icon.svg?v=1269636006768805444\" alt=\"\">\n                    <p>Highests Quality Materials That Lasts Up to 20-25 Wears</p>\n                  </div>\n                  <div class=\"upsellHighlightItem\">\n                    <img src=\"https://cdn.shopify.com/s/files/1/0250/1519/t/27/assets/eyelash-icon.svg?v=17637281597508357764\" alt=\"\">\n                    <p>Unisyn™ Technology Makes Them Ultra-natural Looking</p>\n                  </div>\n                  <div class=\"upsellHighlightItem\">\n                    <img src=\"https://cdn.shopify.com/s/files/1/0250/1519/t/27/assets/curler-icon.svg?v=18141781665275607000\" alt=\"\">\n                    <p>Recommended by A-list Celebs and Pro Make Up Artists</p>\n                  </div>\n                </div>\n                <div class=\"upsellItemListing\"></div>\n                <button id=\"skipCheckoutUpsell\" class=\"btn secondary\">No thanks, take me to checkout</button>\n                <button id=\"closeModal\">\n                  <img src=\"https://uploads-ssl.webflow.com/5e70f8e5d7461820999a0cf5/5e7b70d9dd8fc24bf01bc3be_close.svg\" alt=\"Close\" />\n                </button>\n              </div>\n            </div>\n          `)\n        if (upsells.length) {\n          const container = $('#checkoutUpsellModal').find('.upsellItemListing')\n          await upsells.map(async (item, i) => {\n            container.append(`\n                <div class=\"checkoutUpsellProduct product-${i}\">\n                </div>\n              `)\n            const productContainer = container.find(`.product-${i}`)\n            await fetchProduct(productContainer, item)\n            const product = productContainer.data('product')\n            productContainer.append(`\n                <div class=\"checkoutUpsellItemGalleryContainer\">\n                  <div class=\"checkoutUpsellItemGallery\"></div>\n                </div>\n                <p class=\"upsellItemTitle\">${product.title}</p>\n                <p class=\"upsellItemPrices\"></p>\n                <div class=\"upsellItemDescription\">${product.descriptionHtml}</div>\n                <button class=\"btn checkoutUpsellAddToCart\" value=\"${product.variants[0].id}\">\n                  <img class=\"spinner\" src=\"https://cdn.shopify.com/s/files/1/0250/1519/files/spinner.svg?v=1585762796\" alt=\"Loading Checkout\" />\n                  <span class=\"addToCartText\">Add & Checkout</span>\n                </button>\n              `)\n            const priceContainer = productContainer.find('.upsellItemPrices')\n            const galleryContainer = productContainer.find(\n              '.checkoutUpsellItemGallery'\n            )\n            $.each(product.images, function (i, img) {\n              $(galleryContainer).append(`\n                <img class=\"checkoutUpsellImage\" src=\"${img.src}\" alt=\"${img.altText}\">\n              `)\n            })\n            product.variants.map((variant) =>\n              createPrices(variant, priceContainer)\n            )\n          })\n        }\n      }\n      /*\n          Upsell Event Listeners \n        */\n      // Check when the variant option changes for the upsell in cart\n      $('#cart').on('change', '.upsellProductOption', function (e) {\n        const variant = recursiveArraySearch(\n          product.variants,\n          e.target.value\n        )[0]\n        const container = self.find('.upsellItemPrices').empty()\n        createPrices(variant, container)\n      })\n      // Check when the variant option changes for the upsell in modal\n      $('#upsellItemModal').on('change', '.upsellProductOption', function (e) {\n        const variant = recursiveArraySearch(\n          product.variants,\n          e.target.value\n        )[0]\n        const container = $('#upsellItemModal')\n          .find('.upsellItemPrices')\n          .empty()\n        if (upsellSettings?.discountCode) {\n          createPrices(variant, container)\n        } else {\n          createPrices(variant, container)\n        }\n      })\n      self.find('.upsellAddToCart').on('click', function (e) {\n        const selectedUpsell = self.find('.unit-option:selected')\n        const productVariant = self.data('optionsAndVariants')\n          ? selectedUpsell.val()\n          : self.data('product').variants[0].id\n        addUpsellItem(productVariant)\n        // Add event to FB\n        trackFbEvent(self, productVariant)\n        if (upsellSettings?.discountCode) {\n          addDiscountToCheckout(upsellSettings.discountCode)\n        }\n      })\n      // Listen for the selected upsell in the modal separately because it has its own dropdown\n      $('#upsellItemModal').on('click', '.upsellAddToCart', function (e) {\n        const selectedUpsell = $('#upsellItemModal').find(\n          '.unit-option:selected'\n        )\n        // If the product has variants, get the ID of the selected variant, otherwise just pass the first variant ID\n        const productVariant = self.data('optionsAndVariants')\n          ? selectedUpsell.val()\n          : self.data('product').variants[0].id\n        addUpsellItem(productVariant)\n        // Add event to FB\n        trackFbEvent(self, productVariant)\n        if (upsellSettings?.discountCode) {\n          addDiscountToCheckout(upsellSettings.discountCode)\n        }\n      })\n      $('body').on('click', '.upsellItemTitle, #closeModal', function (e) {\n        if (cartOpen) {\n          toggleCart()\n        } else if (modalOpen) {\n          toggleModal()\n        } else if (checkoutUpsellModalOpen) {\n          toggleCheckoutUpsellModal()\n        }\n      })\n      // Checkout Upsell event listeners\n      $('#checkoutUpsellModal').on(\n        'click',\n        '.checkoutUpsellAddToCart',\n        async function (e) {\n          e.stopPropagation()\n          e.stopImmediatePropagation()\n          await addUpsellItem(this.value)\n          await checkout()\n        }\n      )\n      $('#skipCheckoutUpsell').on('click', async function (e) {\n        await checkout()\n      })\n    }\n  }\n  /*\n      Helper Functions\n    */\n  const toggleModal = function () {\n    modalOpen = !modalOpen\n    $('body').toggleClass('modalOpen')\n    $('#upsellItemModal').fadeToggle()\n    if (modalOpen && slickInitCount === 0) {\n      $('.upsellItemGallery').slick({\n        arrows: true,\n        dots: true,\n      })\n      slickInitCount++\n    }\n  }\n  const toggleCheckoutUpsellModal = function () {\n    checkoutUpsellModalOpen = !checkoutUpsellModalOpen\n    $('body').toggleClass('modalOpen')\n    $('#checkoutUpsellModal').fadeToggle()\n    if (checkoutUpsellModalOpen && slickInitCount === 0) {\n      $('.checkoutUpsellItemGallery').slick({\n        arrows: true,\n        dots: true,\n      })\n      slickInitCount++\n    }\n  }\n  const persistToLocalStorage = function (key, value) {\n    let valueJson = JSON.stringify(value)\n    localStorage.setItem(key, valueJson)\n  }\n  const fetchFromLocalStorage = function (key) {\n    return JSON.parse(localStorage.getItem(key))\n  }\n  const extractLineItems = function (lineItems) {\n    if (lineItems?.length) {\n      const newLineItems = lineItems.map((item) => {\n        return {\n          title: item.title,\n          subtitle: item.variant.title,\n          ...item,\n        }\n      })\n      persistToLocalStorage(lsCartId, newLineItems)\n    } else {\n      persistToLocalStorage(lsCartId, [])\n    }\n  }\n  const setAddToCartLoading = function (boolean) {\n    const element = $('.addToCart').not(':contains(\"Sold Out\")')\n    if (element) {\n      if (boolean) {\n        element.attr('disabled', true)\n        element.find('.addToCartText').hide()\n        element.find('.spinner').show()\n      } else {\n        element.attr('disabled', false)\n        element.find('.spinner').hide()\n        element.find('.addToCartText').show()\n      }\n    }\n  }\n  const setCheckoutLoading = function (boolean) {\n    if (boolean) {\n      $('#checkoutButton').attr('disabled', true)\n      $('#checkoutButtonText').hide()\n      $('#checkoutButton .spinner').show()\n    } else {\n      $('#checkoutButton').attr('disabled', false)\n      $('#checkoutButton .spinner').hide()\n      $('#checkoutButtonText').show()\n    }\n  }\n  const toggleCart = function () {\n    cartOpen = !cartOpen\n    $('body').toggleClass('cartOpen')\n  }\n  const formatPrices = function (variant, formatToCurrency = true) {\n    let variantPrices = null\n    if (variant && variant?.presentmentPrices?.length) {\n      const results = variant.presentmentPrices.filter(\n        (item) => item.price.currencyCode === clientSettings.defaultCurrency\n      )\n      if (results?.length) {\n        variantPrices = results[0]\n      }\n    }\n    if (variantPrices) {\n      const { price, compareAtPrice } = variantPrices\n      let formattedPrice\n      let formattedComparePrice\n      // Formats prices currency format, supports multi-currency\n      const priceFormatter = new Intl.NumberFormat(\n        clientSettings.defaultRegion,\n        {\n          style: 'currency',\n          currency: clientSettings.defaultCurrency,\n          maximumSignificantDigits: 4, // Trim any zeros after decimal\n        }\n      )\n      if (formatToCurrency) {\n        if (price?.amount) {\n          formattedPrice = priceFormatter.format(price.amount)\n        }\n        if (compareAtPrice?.amount) {\n          formattedComparePrice = priceFormatter.format(compareAtPrice.amount)\n        }\n        return {\n          price: formattedPrice,\n          comparePrice: formattedComparePrice\n            ? formattedComparePrice\n            : formattedPrice,\n        }\n      } else {\n        return {\n          price: price?.amount,\n          comparePrice: compareAtPrice?.amount,\n        }\n      }\n    }\n  }\n  // Render product variant pricing\n  const createPrices = function (variant, container) {\n    if (variant && container) {\n      // If it's a single variant product\n      const singleVariant = variant.length === 1\n      const formattedPrices = formatPrices(variant)\n      const numericPrices = formatPrices(variant, false)\n      const discountType = upsellSettings?.discountType\n      const discountAmount = upsellSettings?.discountAmount\n      let productHandle\n      if (variant?.variableValues) {\n        productHandle = variant.variableValues.handle\n      } else if (variant?.product) {\n        productHandle = variant.product.handle\n      }\n      const priceFormatter = new Intl.NumberFormat(\n        clientSettings.defaultRegion,\n        {\n          style: 'currency',\n          currency: clientSettings.defaultCurrency,\n          maximumSignificantDigits: 4, // Trim any zeros after decimal\n        }\n      )\n      const isUpsellItem = productHandle === upsellSettings.cartUpsell\n      if (isUpsellItem && discountType) {\n        const { price, comparePrice } = numericPrices\n        const comparePriceFormatted = formattedPrices?.comparePrice\n        let discountPrice\n        if (discountType === 'percentage') {\n          if (comparePrice) {\n            discountPrice = comparePrice * (discountAmount / 100)\n          } else {\n            discountPrice = price * (discountAmount / 100)\n          }\n        } else if (discountType === 'fixed') {\n          if (comparePrice) {\n            discountPrice = comparePrice - discountAmount\n          } else {\n            discountPrice = price - discountAmount\n          }\n        }\n        const discountPriceFormatted = priceFormatter.format(discountPrice)\n        $(container).append(`\n            <p class=\"unit-price ${\n              singleVariant ? 'single-product-price' : ''\n            } ${discountPrice < price ? 'sale-price' : ''}\">${\n          discountPrice < price\n            ? \"<span class='unit-compare-price'>\" +\n              comparePriceFormatted +\n              '</span>'\n            : ''\n        }\n            ${discountPriceFormatted} ${\n          clientSettings.defaultCurrency === 'USD'\n            ? clientSettings.defaultCurrency\n            : ''\n        }\n            </p>\n          `)\n      } else {\n        const { price, comparePrice } = formattedPrices\n        if (formattedPrices) {\n          $(container).append(`\n          <p class=\"unit-price ${singleVariant ? 'single-product-price' : ''} ${\n            comparePrice > price ? 'sale-price' : ''\n          }\">${\n            comparePrice > price\n              ? \"<span class='unit-compare-price'>\" + comparePrice + '</span>'\n              : ''\n          }\n          ${price} ${\n            clientSettings.defaultCurrency === 'USD'\n              ? clientSettings.defaultCurrency\n              : ''\n          }\n          </p>\n        `)\n        }\n      }\n    }\n  }\n  const getOptionValues = function (product, name) {\n    if (product?.options) {\n      const productOptions = product.options.filter(\n        (option) => option.name.toLowerCase() === name\n      )\n      const values = productOptions[0]?.values.map((option) => option.value)\n      return values\n    }\n  }\n  const recursiveArraySearch = function (array, searchString) {\n    return array.filter(function search(row) {\n      return Object.keys(row).some((key) => {\n        if (typeof row[key] === 'string') {\n          return row[key].toLowerCase().indexOf(searchString.toLowerCase()) > -1\n        } else if (row[key] && typeof row[key] === 'object') {\n          return search(row[key])\n        }\n        return false\n      })\n    })\n  }\n  const fetchProduct = async function (container, productHandle) {\n    if (container && productHandle) {\n      const self = $(container)\n      // Render loading spinner\n      self.html(`\n      <div class=\"productSpinner\">\n        <img src=\"https://cdn.shopify.com/s/files/1/0250/1519/files/spinner.svg?v=1585762796\" alt=\"Loading Checkout\" />\n      </div>\n    `)\n      // Fetch product by product handle\n      await client.product\n        .fetchByHandle(productHandle)\n        .then((response) => {\n          const product = response\n          // Cache product data to memory\n          self.data('product', product)\n          // If product has unit and color options, save them to data\n          const unitOptions = getOptionValues(product, 'units')\n          const productOptions = product?.options\n            .filter((option) => option.name.toLowerCase() !== 'title')\n            .map((option) => option.name)\n          const colorOptions = getOptionValues(product, 'color')\n          const bundleOptions = getOptionValues(product, 'bundle')\n          const singleVariant = product?.variants?.length === 1\n          // Create a new array that contains the product variants grouped by unit options\n          let optionsAndVariants = []\n          if (unitOptions?.length) {\n            for (let index in unitOptions) {\n              let optionName = unitOptions[index]\n              let variants = recursiveArraySearch(product.variants, optionName)\n              optionsAndVariants.push({\n                name: optionName,\n                variants,\n              })\n            }\n          } else if (bundleOptions?.length) {\n            for (let index in bundleOptions) {\n              let optionName = bundleOptions[index]\n              let variants = recursiveArraySearch(product.variants, optionName)\n              optionsAndVariants.push({\n                name: optionName,\n                variants,\n              })\n            }\n          }\n          // Only cache them to data if the options exist\n          singleVariant && self.data('singleVariant', product?.variants[0])\n          productOptions?.length && self.data('productOptions', productOptions)\n          unitOptions?.length && self.data('unitOptions', unitOptions)\n          colorOptions?.length && self.data('colorOptions', colorOptions)\n          optionsAndVariants?.length &&\n            self.data('optionsAndVariants', optionsAndVariants)\n        })\n        .catch((error) => console.log(\"Couldn't fetch product: \", error))\n    }\n  }\n  const addUpsellItem = async function (variantId, qty = 1) {\n    // Reset the item count so it will rerender the cart from scratch\n    itemCount = 0\n    // Set loading states for buttons\n    setAddToCartLoading(true)\n    setCheckoutLoading(true)\n    const quantity = parseInt(qty, 10)\n    const itemsToAdd = [\n      {\n        variantId,\n        quantity,\n      },\n    ]\n    const currentCheckoutId = fetchFromLocalStorage(lsCheckoutId)\n    if (currentCheckoutId) {\n      await client.checkout\n        .addLineItems(currentCheckoutId, itemsToAdd)\n        .then(function (checkout) {\n          // Check to see if the item was added\n          if (checkout.lineItems.length) {\n            extractLineItems(checkout.lineItems)\n          }\n        })\n      // Set loading states for buttons to false\n      setAddToCartLoading(false)\n      setCheckoutLoading(false)\n      // Rerender cart\n      createCartItems()\n      if (modalOpen) {\n        toggleModal()\n      }\n      if (!cartOpen) {\n        toggleCart()\n      }\n    }\n  }\n  const addItems = async function (self, toggleElement) {\n    // Reset the item count so it will rerender the cart from scratch\n    itemCount = 0\n    // Set loading states for buttons\n    setAddToCartLoading(true)\n    setCheckoutLoading(true)\n    // Check if the cart has any items to add\n    const currentCheckoutId = fetchFromLocalStorage(lsCheckoutId)\n    let selectedVariantId\n    let selectedOption\n    // Check if the product is a single variant\n    const singleVariant = self.data('singleVariant')\n    if (singleVariant) {\n      selectedVariantId = singleVariant.id\n    } else {\n      // Get the current selected variant option and find the variant ID\n      selectedOption = self.find(\"input[type='radio']:checked\")\n      if (selectedOption?.length) {\n        selectedVariantId = selectedOption[selectedOption.length - 1]?.value\n      } else {\n        selectedVariantId = self.find('.upsellProductOption').val()\n      }\n    }\n    // Find the current specified quantity to add\n    const qty = parseInt(self.find('.qtySelector').val(), 10)\n    // Format the line items for passing into checkout api\n    const itemsToAdd = [\n      {\n        variantId: selectedVariantId,\n        quantity: qty ? qty : 1, // If there's no qtySelector set default to 1\n      },\n    ]\n    // Send event to FB\n    trackFbEvent(self, selectedVariantId)\n\n    if (currentCheckoutId) {\n      await client.checkout\n        .addLineItems(currentCheckoutId, itemsToAdd)\n        .then(function (checkout) {\n          // Check to see if the item was added\n          if (checkout.lineItems.length) {\n            extractLineItems(checkout.lineItems)\n          }\n        })\n        .catch((error) => console.log(\"Couldn't add item to checkout: \", error))\n      // Set loading states for buttons to false\n      setAddToCartLoading(false)\n      setCheckoutLoading(false)\n      // Rerender cart\n      createCartItems()\n      if (toggleElement === 'cart') {\n        toggleCart()\n      } else if (toggleElement === 'modal') {\n        toggleModal()\n        toggleCart()\n      }\n    }\n  }\n  const addDiscountToCheckout = async function (discountCode) {\n    const currentCheckoutId = fetchFromLocalStorage(lsCheckoutId)\n    if (discountCode) {\n      // Add a discount code to the checkout\n      await client.checkout\n        .addDiscount(currentCheckoutId, discountCode)\n        .then((checkout) => {})\n    }\n  }\n  const createCartItems = function () {\n    if (itemCount === 0) {\n      $('#cartLineItems').empty()\n    }\n    const cartItems = fetchFromLocalStorage(lsCartId)\n    // Render items in checkout in cart\n    if (cartItems?.length) {\n      $('#checkoutButton').show()\n      $('#cartEmpty').hide()\n      let priceCount = 0\n      // For each item in cartItems, render until they've all been rendered\n      for (itemCount; itemCount <= cartItems.length - 1; ) {\n        cartItems.map(function (item, i) {\n          const { variant } = item\n          const formattedPrices = formatPrices(variant)\n          const numericPrices = formatPrices(variant, false)\n          const { price } = numericPrices\n          const { comparePrice } = formattedPrices\n\n          $('#cartLineItems').append(`\n            <div class=\"cart-item\" data-value=\"${item.id}\">\n            ${\n              variant?.image?.src\n                ? `<img src=\"${variant.image.src}\" alt=\"${variant.image?.altText}\"/>`\n                : `<img src=\"https://uploads-ssl.webflow.com/5e70f8e5d7461820999a0cf5/5e83a3654bfbfa1aa178d629_placeholder.jpg\" alt=\"${item.title}\"/>`\n            }\n              <div class=\"cart-item-details\">\n                <p class=\"cart-item-title\">${item.title}</p>\n                ${\n                  // Don't show the variant title if it's a single variant product\n                  item.subtitle.toLowerCase().includes('default title')\n                    ? ''\n                    : `<p class='cart-item-subtitle'>${item.subtitle}</p>`\n                }\n                <p class=\"cart-item-price\" data-value=${variant.id}></p>\n                <div class=\"quantity\">\n                  <button class=\"quantity-button quantity-down\">-</button>\n                  <input class=\"qtySelector\" type=\"number\" min=\"0\" value=\"${\n                    item.quantity\n                  }\" data-value=\"${variant.id}\" />\n                  <button class=\"quantity-button quantity-up\">+</button>\n                </div>\n                <span class=\"cart-item-remove\" data-value=\"${\n                  item.id\n                }\">Remove</span>\n              </div>\n            </div>\n          `)\n          const priceContainer = $('#cartLineItems')\n            .find('.cart-item-price')\n            .val(variant.id)[i]\n          createPrices(variant, priceContainer)\n          // Increment the item count so we know we rendered all the items and won't fire on subsequent instances\n          itemCount++\n        })\n        const totalCartQty = cartItems.reduce((acc, item) => {\n          return acc + item.quantity\n        }, 0)\n        $('#cartCount').text(totalCartQty)\n      }\n    } else {\n      $('#cartEmpty').show()\n      $('#checkoutButton').hide()\n      $('#cartCount').text(0)\n    }\n  }\n  const removeItems = async function (variantId) {\n    // Reset the item count so it will rerender the cart from scratch\n    itemCount = 0\n    // Set loading states for buttons\n    setCheckoutLoading(true)\n    // Check if the cart has any items to add\n    const currentCheckoutId = fetchFromLocalStorage(lsCheckoutId)\n    const cartItems = fetchFromLocalStorage(lsCartId)\n    // Format the line items for passing into checkout api\n    const itemsToRemove = [variantId]\n    const matchingVariant = recursiveArraySearch(cartItems, variantId)[0]\n\n    await client.checkout\n      .removeLineItems(currentCheckoutId, itemsToRemove)\n      .then(function (checkout) {\n        extractLineItems(checkout.lineItems)\n      })\n      .catch((error) =>\n        console.log(\"Couldn't remove item from checkout: \", error)\n      )\n    if (matchingVariant && matchingVariant.id === variantId) {\n      await client.checkout\n        .removeDiscount(currentCheckoutId)\n        .then((checkout) => {})\n    }\n    // Set loading states for buttons to false\n    setCheckoutLoading(false)\n    // Rerender cart\n    createCartItems()\n  }\n  const updateItems = async function (variantId, qty) {\n    // Reset the item count so it will rerender the cart from scratch\n    itemCount = 0\n    // Set loading states for buttons\n    setAddToCartLoading(true)\n    setCheckoutLoading(true)\n    // Check if the cart has any items to add\n    const currentCheckoutId = fetchFromLocalStorage(lsCheckoutId)\n    // Get the current selected variant option and find the variant ID\n    // Format the line items for passing into checkout api\n    const itemsToUpdate = [\n      {\n        id: variantId,\n        quantity: qty,\n      },\n    ]\n    await client.checkout\n      .updateLineItems(currentCheckoutId, itemsToUpdate)\n      .then(function (checkout) {\n        extractLineItems(checkout.lineItems)\n      })\n      .catch((error) =>\n        console.log(\"Couldn't update items in checkout: \", error)\n      )\n    // Set loading states for buttons to false\n    setAddToCartLoading(false)\n    setCheckoutLoading(false)\n    // Rerender cart\n    createCartItems()\n  }\n  const checkout = async function () {\n    const currentCheckoutId = fetchFromLocalStorage(lsCheckoutId)\n    const upsellDisplayCount = await fetchFromLocalStorage(\n      lsCheckoutUpsellDisplayCount\n    )\n    console.log('Count:', upsellDisplayCount)\n    // If the upsell hasn't been shown to the customer yet, trigger the modal\n    if (upsellSettings?.upsellOnCheckout && upsellDisplayCount === 0) {\n      console.log('Showing upsells')\n      toggleCart()\n      toggleCheckoutUpsellModal()\n      checkoutUpsellDisplayCount++\n      persistToLocalStorage(\n        lsCheckoutUpsellDisplayCount,\n        checkoutUpsellDisplayCount\n      )\n    } else if (!upsellSettings?.upsellOnCheckout || upsellDisplayCount > 0) {\n      console.log('Checking out')\n      // If the upsell has already been shown, skip the modal and go to checkout\n      setCheckoutLoading(true)\n      await client.checkout.fetch(currentCheckoutId).then((checkout) => {\n        // Do something with the checkout\n        if (checkout.webUrl) {\n          location.href = checkout.webUrl\n        }\n      })\n    }\n  }\n  const trackFbEvent = function (self, variantId) {\n    // Add Facebook Tracking\n    const productTitle = self.data('product')?.title\n    const productVariant = recursiveArraySearch(\n      self.data('product').variants,\n      variantId\n    )[0]\n    const pattern = /\\/([0-9]+)[^\\/]*$/\n    const productVariantShopifyId = pattern.exec(\n      atob(self.data('product')?.id)\n    )[1]\n    const qty = parseInt(self.find('.qtySelector').val(), 10)\n    if (typeof fbq !== 'undefined') {\n      fbq('track', 'AddToCart', {\n        value: parseInt(productVariant.priceV2.amount, 10),\n        currency: clientSettings.defaultCurrency,\n        content_type: 'product_group',\n        content_ids: productVariantShopifyId,\n        content_category: productVariant.title,\n        content_name: productVariant.title,\n        num_items: qty ? qty : 1,\n      })\n    }\n  }\n})(jQuery)\n"],"sourceRoot":""}